{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/GetGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","components/RemoveCategory.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","InputValue","setInputValue","onSubmit","e","preventDefault","undefined","cats","type","value","onChange","target","GifGridItem","title","image","className","src","url","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","original","GifGrid","loading","state","setState","useEffect","setTimeout","then","useFetchGifs","class","alt","index","RemoveCategory","categoryTitle","onClick","console","log","filter","cat","xmlns","fill","viewBox","stroke","d","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0a658d73.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ( {setCategories} ) => {\n    const [InputValue, setInputValue] = useState('');\n    const searchValue = (e) =>{\n        setInputValue(e.target.value);\n    }\n    const handleSubmit = (e) =>{\n        e.preventDefault();\n        if(InputValue === '' || InputValue === undefined || InputValue === null){\n            setInputValue('');\n            return;\n        }\n        setCategories(cats => [InputValue, ...cats] );  \n        setInputValue('');\n    }\n    return (\n        <form onSubmit={handleSubmit}>\n            <input \n            type=\"text\"\n            value= {InputValue}\n            onChange={searchValue}\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes ={\n    setCategories : PropTypes.func.isRequired\n}","//modo clasico sin usar spread desde el otro lado\n// export const GifGridItem = ( {img} ) => {\n//     const {title, image} = img;\n//     return (\n//         <div className=\"box-border w-64 mb-3 p-2 rounded-t bg-white\">\n//             <img className=\"object-fill h-48 w-full\" src={image.url}/>\n//             <h5 className=\"mt-3\">{title}</h5>    \n//         </div>\n//     )\n// }\n\nexport const GifGridItem = ( {title, image} ) => {\n    return (\n        <div className=\"box-border shadow-2xl mr-2 w-64 mb-3 p-2 rounded-t bg-white\">\n            <img className=\"object-fill h-48 w-full\" src={image.url}/>\n            <h5 className=\"mt-3 text-center\">{title}</h5>    \n        </div>\n    )\n}","export const getGifs = async( category ) => {\n    const API_KEY = 'rMWC6XqKW07y3WP7Er0aIyrn4nNkwJ2X';\n    const limit = 10;\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=${API_KEY}&q=${ encodeURI(category)}&limit=${limit}`;\n    const resp = await fetch(url);\n    const {data} = await resp.json();\n    const gifs = data.map( img =>{\n        return (\n            {\n                id: img.id,\n                title: img.title,\n                image: img.images?.original,\n            });\n    } );\n    return gifs;\n};","import React from \"react\";\n import { GifGridItem } from './GifGridItem';\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\n\n//inicio del component\nexport const GifGrid = ({ category }) => {\n  const {loading, data} = useFetchGifs(category);\n  return (\n    <div key=\"grid\">\n        <h3>{category}</h3>\n        <div className=\"flex flex-wrap justify-center\">\n            {loading && <img src=\"../../public/assets/img/reload-symbol.svg\" class=\"logo\" alt=\"Loading Logo \"/> }\n            {data.map( (img, index) => {\n                         return( <GifGridItem key={`grid-`+index} {...img} />  );\n                     } )}\n      </div> \n    </div>\n  );\n};\n","\nimport { useState, useEffect } from 'react';\nimport {getGifs} from '../helpers/GetGifs';\n\nexport const useFetchGifs = (category) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n        setTimeout( () => {\n            getGifs(category)\n                .then( gifs => setState({\n                        data: gifs,\n                        loading: false\n                    }));\n        }, 4000);\n    }, [category]);\n    \n\n    return state;\n}","import { useState } from \"react\";\nimport PropTypes from 'prop-types';\n\nexport const RemoveCategory = ( {categoryTitle, setCategories} ) => {\n    \n    const removeCat = () => {\n        console.log(categoryTitle)\n        setCategories( cats => { return cats.filter( cat => cat !== categoryTitle)});\n    }\n    return (\n            <svg onClick={removeCat} xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n    )\n}\n\nRemoveCategory.propTypes ={\n    setCategories : PropTypes.func.isRequired\n}","import { useState } from \"react\";\n\nimport { AddCategory } from \"./AddCategory\";\nimport { GifGrid } from \"./GifGrid\";\nimport { RemoveCategory } from \"./RemoveCategory\";\nconst GifExpertApp = () =>{\n    // Al usar const y declarar el array no lo podemos mutar dinamicamente\n    const [categories, setCategories] = useState(['dragon ball']);\n\n    // const addCategory  = ( cat ) => {\n    //     // esto es una forma de solucion corta\n    //     // const newElement = [...own, 'naruto'];\n    //     // setcategories(newElement);\n    //     //esto es otra forma\n    //     setCategories( cats => [...cats, cat] );\n    // }\n\n    // const removeCategory = ( cat ) => {\n    //     setCategories( cats => [...cats, cat] );\n    // }\n    return(\n        <>\n        <h2>GifExpertApp</h2>\n        <hr></hr>\n        <AddCategory setCategories={setCategories}/>\n        <ol className=\"flex space-x-3 justify-center\">\n            {categories && \n                categories.map( \n                    (category, index) => \n                        <li className=\"rounded-full py-1 px-3 bg-red-500 text-sm text-white\" key={`category-${index}`}>\n                            <p className=\"flex self-center\">{category} <RemoveCategory categoryTitle={category} setCategories={setCategories}/></p>\n                        </li>)\n            }\n         </ol>\n         {categories && \n                categories.map( (category, index) => <GifGrid key={`card-${index}`} category={category}></GifGrid> )\n            }\n         \n            \n        </>\n    )\n}\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './components/GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root') );\n"],"sourceRoot":""}